<?php
/**
 * Test Sidebar HTML Output
 * Shows exactly what HTML is generated by the sidebar
 */

// Start session (required for sidebar)
session_start();

// Set up minimal session data for testing
if (!isset($_SESSION['user_v2'])) {
    $_SESSION['user_v2'] = [
        'id' => 1,
        'name' => 'Test Admin',
        'email' => 'admin@test.com',
        'role' => 'admin'
    ];
    $_SESSION['user_role'] = 'admin';
    $_SESSION['user_name'] = 'Test Admin';
}

// Include config
require_once 'config_v2.php';

echo "<!DOCTYPE html>\n";
echo "<html>\n<head>\n";
echo "<title>Sidebar Output Test</title>\n";
echo "<style>\n";
echo "body { font-family: monospace; padding: 20px; }\n";
echo ".test-section { margin: 20px 0; padding: 15px; background: #f5f5f5; border: 1px solid #ddd; }\n";
echo ".code { background: #fff; padding: 10px; border: 1px solid #ccc; white-space: pre-wrap; }\n";
echo "a { color: #2563EB; text-decoration: none; }\n";
echo "a:hover { text-decoration: underline; }\n";
echo ".success { color: green; }\n";
echo ".error { color: red; }\n";
echo "</style>\n";
echo "</head>\n<body>\n";

echo "<h1>Sidebar Navigation Test</h1>\n";

// Test 1: Show configuration
echo "<div class='test-section'>\n";
echo "<h2>1. Configuration</h2>\n";
echo "<div class='code'>\n";
echo "BASE_URL = " . BASE_URL . "\n";
echo "Current script: " . $_SERVER['PHP_SELF'] . "\n";
echo "Request URI: " . $_SERVER['REQUEST_URI'] . "\n";
echo "</div>\n";
echo "</div>\n";

// Test 2: Show base_url calculation
echo "<div class='test-section'>\n";
echo "<h2>2. Base URL Calculation (from sidebar.php logic)</h2>\n";
echo "<div class='code'>\n";

// Replicate sidebar.php logic
if (defined('BASE_URL')) {
    if (strpos(BASE_URL, 'http://') === 0 || strpos(BASE_URL, 'https://') === 0) {
        $base_url = rtrim(BASE_URL, '/');
        echo "\$base_url = " . $base_url . " (using full URL from BASE_URL)\n";
    } else {
        $base_url = rtrim(BASE_URL, '/');
        echo "\$base_url = " . $base_url . " (using path from BASE_URL)\n";
    }
} elseif (defined('APP_URL')) {
    $base_url = rtrim(APP_URL, '/');
    echo "\$base_url = " . $base_url . " (using APP_URL)\n";
} else {
    $base_url = '/Nexiosolution/collabora';
    echo "\$base_url = " . $base_url . " (using fallback)\n";
}

echo "</div>\n";
echo "</div>\n";

// Test 3: Show generated links
echo "<div class='test-section'>\n";
echo "<h2>3. Generated Navigation Links</h2>\n";
echo "<p>These are the exact links that would be generated in the sidebar:</p>\n";
echo "<div class='code'>\n";

$nav_links = [
    'Dashboard' => $base_url . '/index_v2.php',
    'File Manager' => $base_url . '/files.php',
    'Shared' => $base_url . '/shared.php',
    'Calendar' => $base_url . '/calendar.php',
    'Tasks' => $base_url . '/tasks.php',
    'Chat' => $base_url . '/chat.php',
    'Admin Dashboard' => $base_url . '/admin/index.php',
    'User Management' => $base_url . '/admin/users.php',
    'Tenant Management' => $base_url . '/admin/tenants.php',
    'System Logs' => $base_url . '/admin/logs.php',
];

foreach ($nav_links as $label => $url) {
    echo "$label:\n";
    echo "  URL: $url\n";
    echo "  HTML: &lt;a href=\"" . htmlspecialchars($url) . "\"&gt;$label&lt;/a&gt;\n\n";
}

echo "</div>\n";
echo "</div>\n";

// Test 4: Test actual links
echo "<div class='test-section'>\n";
echo "<h2>4. Click Test - Try These Links</h2>\n";
echo "<p>Click each link to test if navigation works:</p>\n";
echo "<ul>\n";

foreach ($nav_links as $label => $url) {
    echo "<li><a href=\"$url\">$label</a> - <small>$url</small></li>\n";
}

echo "</ul>\n";
echo "</div>\n";

// Test 5: Simulate from admin directory
echo "<div class='test-section'>\n";
echo "<h2>5. Simulating Access from /admin/ Directory</h2>\n";
echo "<p>If this page was accessed from /admin/index.php:</p>\n";
echo "<div class='code'>\n";

// Temporarily change PHP_SELF to simulate admin context
$original_php_self = $_SERVER['PHP_SELF'];
$_SERVER['PHP_SELF'] = '/Nexiosolution/collabora/admin/index.php';

echo "PHP_SELF = " . $_SERVER['PHP_SELF'] . "\n";
echo "Links would still be:\n";
echo "  Calendar: " . $base_url . '/calendar.php' . "\n";
echo "  Tasks: " . $base_url . '/tasks.php' . "\n";
echo "  Chat: " . $base_url . '/chat.php' . "\n";

// Restore original
$_SERVER['PHP_SELF'] = $original_php_self;

echo "</div>\n";
echo "</div>\n";

// Test 6: File existence check
echo "<div class='test-section'>\n";
echo "<h2>6. File Existence Check</h2>\n";
echo "<ul>\n";

$files_to_check = [
    'calendar.php',
    'tasks.php',
    'chat.php',
    'files.php',
    'shared.php',
    'admin/index.php',
    'admin/users.php'
];

foreach ($files_to_check as $file) {
    $full_path = __DIR__ . '/' . $file;
    if (file_exists($full_path)) {
        echo "<li class='success'>✓ $file exists</li>\n";
    } else {
        echo "<li class='error'>✗ $file missing</li>\n";
    }
}

echo "</ul>\n";
echo "</div>\n";

// Test 7: Recommendations
echo "<div class='test-section'>\n";
echo "<h2>7. Analysis & Recommendations</h2>\n";

$issues = [];
$fixes = [];

// Check if BASE_URL has protocol
if (strpos(BASE_URL, 'http') === 0) {
    echo "<p class='success'>✓ BASE_URL includes protocol (good for absolute URLs)</p>\n";
} else {
    echo "<p class='error'>✗ BASE_URL doesn't include protocol</p>\n";
    $issues[] = "BASE_URL should include protocol";
    $fixes[] = "Update config_v2.php to include http:// or https:// in BASE_URL";
}

// Check if links are absolute
if (strpos($base_url, 'http') === 0) {
    echo "<p class='success'>✓ Links are absolute URLs (will work from any directory)</p>\n";
} else if (strpos($base_url, '/') === 0) {
    echo "<p class='success'>✓ Links use absolute paths (will work from any directory)</p>\n";
} else {
    echo "<p class='error'>✗ Links might be relative</p>\n";
    $issues[] = "Links might not work from subdirectories";
    $fixes[] = "Ensure \$base_url starts with / or http://";
}

if (empty($issues)) {
    echo "<p><strong>Result: Navigation should be working correctly!</strong></p>\n";
} else {
    echo "<p><strong>Issues found:</strong></p>\n";
    echo "<ul>\n";
    foreach ($issues as $issue) {
        echo "<li>$issue</li>\n";
    }
    echo "</ul>\n";
    echo "<p><strong>Recommended fixes:</strong></p>\n";
    echo "<ul>\n";
    foreach ($fixes as $fix) {
        echo "<li>$fix</li>\n";
    }
    echo "</ul>\n";
}

echo "</div>\n";

echo "</body>\n</html>";